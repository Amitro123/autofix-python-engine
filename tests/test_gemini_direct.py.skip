"""
Test Gemini Service Directly
"""

# Load environment first
import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent))

from test_config import get_api_key
import os

# Set API key from environment
os.environ['GEMINI_API_KEY'] = get_api_key()

from autofix_core.application.services.tools_service import ToolsService
from autofix_core.application.services.gemini_service import GeminiService

# Create services
print("Initializing services...")
tools_service = ToolsService()
gemini_service = GeminiService(tools_service)


# Test code
broken_code = """
x = [1, 2, 3]
print(x[10])
"""

print("\n" + "="*80)
print("Testing Gemini AI Code Fixing")
print("="*80)
print(f"\nBroken code:\n{broken_code}")

print("\nü§ñ Asking Gemini to fix it...")

# Fix code
result = gemini_service.process_user_code(broken_code, max_iterations=3)

print("\n" + "="*80)
if result['success']:
    print("‚úÖ SUCCESS!")
    print("="*80)
    print(f"\nIterations: {result['iterations']}")
    print(f"Tools used: {len(result['tools_used'])}")
    
    print(f"\nüìù Fixed Code:\n")
    print(result['fixed_code'])
    
    print(f"\nüí° Explanation:\n")
    print(result['explanation'][:500])
    
else:
    print("‚ùå FAILED")
    print("="*80)
    print(result['explanation'])

print("\n" + "="*80)
